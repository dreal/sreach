// The two tank system, consists of two tanks containing water. Both tanks are leaking at 
// a constant rate. Water is added to the system at a constant rate through a hose, which 
// at any point in time is dedicated to either one tank or the other. It is assumed that 
// the hose can switch between the tanks instantaneously. 

// For i = 1, 2, let x_i denote the volume of water in Tank i and v_i > 0 denote the 
// constant flow of water out of Tank i. Let w denote the constant flow of water into the 
// system. The objective is to keep the water volumes above r_1 and r_2, respectively, 
// assuming that the water volumes are above r_1 and r_2 initially. This is to be achieved 
// by a controller that switches the inflow to Tank 1 whenever x_1 ≤ r_1 and to Tank 2 
// whenever x_2 ≤ r_2.

#define v1 0.8 // the constant flow of water out of tank 1
#define v2 1.2 // the constant flow of water out of tank 1
#define r1 10 // thres vol for tank 1
#define r2 10 // thres vol for tank 2
#define w 2 // the constant flow of water into the system
//#define H1 15 // init vol of water in tank 1
//#define H2 10 // init vol of water in tank 2


[0, 50] x1; // volume of water of tank 1
[0, 50] x2; // vol of water of tank 2
[0, 3] time;


{ mode 1; //tank 1

  invt:
        (x2 >= r2);
  flow:
        d/dt[x1] = w - v1;
	d/dt[x2] = 0 - v2;
  jump:
        (x2 <= r2) ==> @2 (and (x1' = x1) (x2' = x2));
}
{ mode 2; //tank 2

  invt:
        (x1 <= r1);
  flow:
        d/dt[x1] = 0 - v1;
	d/dt[x2] = w - v2;
  jump:
        (x1 <= r1) ==> @2 (and (x1' = x1) (x2' = x2));
}
init:
//@1	(and (x1 >= r1) (x2 >= r2));
@2	(and (x1 >= r1) (x2 >= r2));

goal:
@2	(and (x1 >= 5) (x2 >= 5));
