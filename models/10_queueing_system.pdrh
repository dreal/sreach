// hybrid model of a queueing system 
// receiving jobs at a rate rec, and
// dispatching them at a rate B.
// the max size of queue is denoted as qmax.
// the current size of queue is denoted as q.

//#define B 1 // bandwidth
U(1,4) B;
#define qmax (qmax0 + 10)
E(1.3) qmax0;

[-1, 20] q;
[0, 3] time;

U(0, 5) rec;
E(0.3) q0;

{ mode 1; // empty

  invt:
        (q <= qmax); 
  flow:
        d/dt[q] = 0;
  jump:
        (rec >= B) ==> @2 (q' = q);
}
{ mode 2; // normal

  invt:
        
  flow:
        d/dt[q] = rec - B;
  jump:
        (and (q >= qmax) (rec >= B)) ==> @3 (q' = q);
	(and (q <= 0) (rec <= B)) ==> @1 (q' = q);
}
{ mode 3; // full

  invt:
        
  flow:
        d/dt[q] = 0;
  jump:
        (rec <= B) ==> @2 (q' = q);
}
init:
@1	(q = q0);

goal:
@3	(and (q <= 19) (q >= 0));
